kind: Deployment
apiVersion: apps/v1
metadata:
  name: airflow
  labels:
    app.kubernetes.io/part-of: airflow
    app.kubernetes.io/name: airflow
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airflow
  template:
    metadata:
      labels:
        app: airflow
    spec:
      restartPolicy: Always
      initContainers:
        - name: wait-for-airflow-migrations
          image: quay.io/osclimate/airflow:2.7.3-omdingest-1.2.2
          # args:
          #   - airflow
          #   - db
          #   - migrate
          args:
            - bash
            - '-c'
            - |
              exec airflow db migrate ; airflow users  create --role Admin --username admin --email admin --firstname admin --lastname admin --password admin ;
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: AIRFLOW__CORE__EXECUTOR
              value: LocalExecutor
            - name: AIRFLOW__CORE__LOAD_EXAMPLES
              value: 'False'
            - name: DB_HOST
              value: airflow-postgresql
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: airflow-postgresql
                  key: postgresql-database
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: airflow-postgresql
                  key: postgresql-user
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: airflow-postgresql
                  key: postgresql-password
            - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
              value: 'postgresql://$(DB_USER):$(DB_PASS)@$(DB_HOST):5432/$(DB_NAME)'
            - name: AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION
              value: 'True'
            - name: AIRFLOW__API__AUTH_BACKENDS
              value: >-
                airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session
            - name: AIRFLOW__OPENMETADATA_AIRFLOW_APIS__DAG_GENERATED_CONFIGS
              value: /opt/airflow/dag_generated_configs
            - name: AIRFLOW__LINEAGE__BACKEND
              value: >-
                airflow_provider_openmetadata.lineage.backend.OpenMetadataLineageBackend
            - name: AIRFLOW__LINEAGE__AIRFLOW_SERVICE_NAME
              value: airflow
            - name: AIRFLOW__LINEAGE__AUTH_PROVIDER_TYPE
              value: openmetadata
            - name: AIRFLOW__LINEAGE__JWT_TOKEN
              value: >-
                eyJraWQiOiJHYjM4OWEtOWY3Ni1nZGpzLWE5MmotMDI0MmJrOTQzNTYiLCJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJvcGVuLW1ldGFkYXRhLm9yZ1wiIiwic3ViIjoiaW5nZXN0aW9uLWJvdCIsImVtYWlsIjoiaW5nZXN0aW9uLWJvdEBvcGVubWV0YWRhdGEub3JnIiwiaXNCb3QiOnRydWUsInRva2VuVHlwZSI6IkJPVCIsImlhdCI6MTcxNDM1ODQ3MSwiZXhwIjpudWxsfQ.Qj_U1X9vykqfw7fCdEPqQMdeR2__dGk9OJl8bMjAils4XRCJtoQ4YcttPavz9AQ4eHK4Uwb7Bep9PKKYsd7j7-DGJbzB5Yvpz-mumJ8oXoLgMfyT41OB6BSNR65_34Z2xBJOY-Sxi9ydP6n5XcqARigR63iagEv9AmuPWNuDyYt-LX5KesOc4cwUnCP_4YojE-uz3RtnbY3hlfcV5bdhhDYj1W3UrMqxy8PgfK54YpXTZt2NhcNkWd3Iae0Z9MYXtBZYJ6lBjRi3Z8LS3R2YEN-dfFdYzgZCxSFN5oVGEr3uuTxrgj3c3paXw3rSDutymSQ9S86s2HjYLVhi0EckEQ
            - name: AIRFLOW__LINEAGE__OPENMETADATA_API_ENDPOINT
              value: 'http://openmetadata.$(NAMESPACE).svc.cluster.local:8585/api'
            - name: AIRFLOW_CONN_S3
              value: 'aws://minioAdmin:minio1234@/?endpoint_url=http:%2F%2Fminio.$(NAMESPACE).svc.cluster.local:9000'
            - name: AIRFLOW_CONN_TRINO_CONNECTION
              value: 'trino://admin:@trino.$(NAMESPACE).svc.cluster.local:8080/'
            - name: AIRFLOW__WEBSERVER__RBAC
              value: 'True'
            - name: AIRFLOW__WEBSERVER__AUTHENTICATE
              value: 'True'
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
        - name: add-airflow-admin
          image: quay.io/osclimate/airflow:2.7.3-omdingest-1.2.2
          # args:
          #   - airflow
          #   - db
          #   - migrate
          args:
            - bash
            - '-c'
            - |
              exec airflow users  create --role Admin --username admin --email admin --firstname admin --lastname admin --password admin ;
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: AIRFLOW__CORE__EXECUTOR
              value: LocalExecutor
            - name: AIRFLOW__CORE__LOAD_EXAMPLES
              value: 'False'
            - name: DB_HOST
              value: airflow-postgresql
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: airflow-postgresql
                  key: postgresql-database
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: airflow-postgresql
                  key: postgresql-user
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: airflow-postgresql
                  key: postgresql-password
            - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
              value: 'postgresql://$(DB_USER):$(DB_PASS)@$(DB_HOST):5432/$(DB_NAME)'
            - name: AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION
              value: 'True'
            - name: AIRFLOW__API__AUTH_BACKENDS
              value: >-
                airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session
            - name: AIRFLOW__OPENMETADATA_AIRFLOW_APIS__DAG_GENERATED_CONFIGS
              value: /opt/airflow/dag_generated_configs
            - name: AIRFLOW__LINEAGE__BACKEND
              value: >-
                airflow_provider_openmetadata.lineage.backend.OpenMetadataLineageBackend
            - name: AIRFLOW__LINEAGE__AIRFLOW_SERVICE_NAME
              value: airflow
            - name: AIRFLOW__LINEAGE__AUTH_PROVIDER_TYPE
              value: openmetadata
            - name: AIRFLOW__LINEAGE__JWT_TOKEN
              value: >-
                eyJraWQiOiJHYjM4OWEtOWY3Ni1nZGpzLWE5MmotMDI0MmJrOTQzNTYiLCJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJvcGVuLW1ldGFkYXRhLm9yZ1wiIiwic3ViIjoiaW5nZXN0aW9uLWJvdCIsImVtYWlsIjoiaW5nZXN0aW9uLWJvdEBvcGVubWV0YWRhdGEub3JnIiwiaXNCb3QiOnRydWUsInRva2VuVHlwZSI6IkJPVCIsImlhdCI6MTcxNDM1ODQ3MSwiZXhwIjpudWxsfQ.Qj_U1X9vykqfw7fCdEPqQMdeR2__dGk9OJl8bMjAils4XRCJtoQ4YcttPavz9AQ4eHK4Uwb7Bep9PKKYsd7j7-DGJbzB5Yvpz-mumJ8oXoLgMfyT41OB6BSNR65_34Z2xBJOY-Sxi9ydP6n5XcqARigR63iagEv9AmuPWNuDyYt-LX5KesOc4cwUnCP_4YojE-uz3RtnbY3hlfcV5bdhhDYj1W3UrMqxy8PgfK54YpXTZt2NhcNkWd3Iae0Z9MYXtBZYJ6lBjRi3Z8LS3R2YEN-dfFdYzgZCxSFN5oVGEr3uuTxrgj3c3paXw3rSDutymSQ9S86s2HjYLVhi0EckEQ
            - name: AIRFLOW__LINEAGE__OPENMETADATA_API_ENDPOINT
              value: 'http://openmetadata.$(NAMESPACE).svc.cluster.local:8585/api'
            - name: AIRFLOW_CONN_S3
              value: 'aws://minioAdmin:minio1234@/?endpoint_url=http:%2F%2Fminio.$(NAMESPACE).svc.cluster.local:9000'
            - name: AIRFLOW_CONN_TRINO_CONNECTION
              value: 'trino://admin:@trino.$(NAMESPACE).svc.cluster.local:8080/'
            - name: AIRFLOW__WEBSERVER__RBAC
              value: 'True'
            - name: AIRFLOW__WEBSERVER__AUTHENTICATE
              value: 'True'
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
        - name: deploydagsfroms3
          image: 'quay.io/osclimate/minioclient:1.7'
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: DEPLOYMENT_TYPE
              value: init
            - name: S3_BUCKET_URL
              value: http://minio:9000
              # valueFrom:
              #   secretKeyRef:
              #     name: dag-deployment
              #     key: s3-bucketurl
            - name: S3_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: dag-deployment
                  key: s3-accesskey
            - name: S3_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: dag-deployment
                  key: s3-secret_key
          resources: {}
          volumeMounts:
            - name: mcconfig
              mountPath: /.mc
            - name: dags-data
              mountPath: /opt/airflow/dags
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      securityContext: {}
      containers:
        - resources:
            limits:
              cpu: '2'
              memory: 4Gi
            requests:
              cpu: '2'
              memory: 4Gi
          terminationMessagePath: /dev/termination-log
          name: airflow-web
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: AIRFLOW__CORE__EXECUTOR
              value: LocalExecutor
            - name: AIRFLOW__LOGGING__LOGGING_LEVEL
              value: DEBUG
            - name: AIRFLOW__CORE__LOAD_EXAMPLES
              value: 'False'
            - name: CURL_CA_BUNDLE
            - name: DB_HOST
              value: airflow-postgresql
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: airflow-postgresql
                  key: postgresql-database
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: airflow-postgresql
                  key: postgresql-user
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: airflow-postgresql
                  key: postgresql-password
            - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
              value: 'postgresql://$(DB_USER):$(DB_PASS)@$(DB_HOST):5432/$(DB_NAME)'
            - name: AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION
              value: 'True'
            - name: AIRFLOW__API__AUTH_BACKENDS
              value: >-
                airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session
            - name: AIRFLOW__OPENMETADATA_AIRFLOW_APIS__DAG_GENERATED_CONFIGS
              value: /opt/airflow/dag_generated_configs
            - name: AIRFLOW__LINEAGE__BACKEND
              value: >-
                airflow_provider_openmetadata.lineage.backend.OpenMetadataLineageBackend
            - name: AIRFLOW__LINEAGE__AIRFLOW_SERVICE_NAME
              value: airflow
            - name: AIRFLOW__LINEAGE__AUTH_PROVIDER_TYPE
              value: openmetadata
            - name: AIRFLOW__LINEAGE__JWT_TOKEN
              value: >-
                eyJraWQiOiJHYjM4OWEtOWY3Ni1nZGpzLWE5MmotMDI0MmJrOTQzNTYiLCJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJvcGVuLW1ldGFkYXRhLm9yZ1wiIiwic3ViIjoiaW5nZXN0aW9uLWJvdCIsImVtYWlsIjoiaW5nZXN0aW9uLWJvdEBvcGVubWV0YWRhdGEub3JnIiwiaXNCb3QiOnRydWUsInRva2VuVHlwZSI6IkJPVCIsImlhdCI6MTcxNDM1ODQ3MSwiZXhwIjpudWxsfQ.Qj_U1X9vykqfw7fCdEPqQMdeR2__dGk9OJl8bMjAils4XRCJtoQ4YcttPavz9AQ4eHK4Uwb7Bep9PKKYsd7j7-DGJbzB5Yvpz-mumJ8oXoLgMfyT41OB6BSNR65_34Z2xBJOY-Sxi9ydP6n5XcqARigR63iagEv9AmuPWNuDyYt-LX5KesOc4cwUnCP_4YojE-uz3RtnbY3hlfcV5bdhhDYj1W3UrMqxy8PgfK54YpXTZt2NhcNkWd3Iae0Z9MYXtBZYJ6lBjRi3Z8LS3R2YEN-dfFdYzgZCxSFN5oVGEr3uuTxrgj3c3paXw3rSDutymSQ9S86s2HjYLVhi0EckEQ
            - name: AIRFLOW__LINEAGE__OPENMETADATA_API_ENDPOINT
              value: 'http://openmetadata.$(NAMESPACE).svc.cluster.local:8585/api'
            - name: AIRFLOW_CONN_S3
              value: 'aws://minioAdmin:minio1234@/?endpoint_url=http:%2F%2Fminio.$(NAMESPACE).svc.cluster.local:9000'
            - name: AIRFLOW_CONN_TRINO_CONNECTION
              value: 'trino://admin:@trino.$(NAMESPACE).svc.cluster.local:8080/'

            - name: AIRFLOW__WEBSERVER__RBAC
              value: 'True'
            - name: AIRFLOW__WEBSERVER__AUTHENTICATE
              value: 'True'
            - name: AIRFLOW__WEBSERVER__WEB_SERVER_MASTER_TIMEOUT
              value: '300'
            - name: AIRFLOW__WEBSERVER__WORKER_REFRESH_BATCH_SIZE
              value: '0'
            - name: AIRFLOW__WEBSERVER__WORKER_REFRESH_INTERVAL
              value: '0'
          ports:
            - containerPort: 8080
              protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: dags-data
              mountPath: /opt/airflow/dags
            - name: dags-generated-data
              mountPath: /opt/airflow/dag_generated_configs
            - name: dags-log
              mountPath: /opt/airflow/logs
            # - name: airflowweb-config
            #   mountPath: /opt/airflow/webserver_config.py
            #   subPath: webserver_config.py
          terminationMessagePolicy: File
          image: quay.io/osclimate/airflow:2.7.3-omdingest-1.2.2
          args:
            - bash
            - '-c'
            - exec airflow webserver
        - resources:
            limits:
              cpu: '2'
              memory: 4Gi
            requests:
              cpu: '1'
              memory: 2Gi
          terminationMessagePath: /dev/termination-log
          name: scheduler
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: AIRFLOW__CORE__EXECUTOR
              value: LocalExecutor
            - name: AIRFLOW__CORE__LOAD_EXAMPLES
              value: 'False'
            - name: DB_HOST
              value: airflow-postgresql
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: airflow-postgresql
                  key: postgresql-database
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: airflow-postgresql
                  key: postgresql-user
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: airflow-postgresql
                  key: postgresql-password
            - name: AIRFLOW__DATABASE__SQL_ALCHEMY_CONN
              value: 'postgresql://$(DB_USER):$(DB_PASS)@$(DB_HOST):5432/$(DB_NAME)'
            - name: AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION
              value: 'True'
            - name: AIRFLOW__API__AUTH_BACKENDS
              value: >-
                airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session
            - name: AIRFLOW__OPENMETADATA_AIRFLOW_APIS__DAG_GENERATED_CONFIGS
              value: /opt/airflow/dag_generated_configs
            - name: AIRFLOW__LINEAGE__BACKEND
              value: >-
                airflow_provider_openmetadata.lineage.backend.OpenMetadataLineageBackend
            - name: AIRFLOW__LINEAGE__AIRFLOW_SERVICE_NAME
              value: airflow
            - name: AIRFLOW__LINEAGE__AUTH_PROVIDER_TYPE
              value: openmetadata
            - name: AIRFLOW__LINEAGE__JWT_TOKEN
              value: >-
                eyJraWQiOiJHYjM4OWEtOWY3Ni1nZGpzLWE5MmotMDI0MmJrOTQzNTYiLCJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJvcGVuLW1ldGFkYXRhLm9yZ1wiIiwic3ViIjoiaW5nZXN0aW9uLWJvdCIsImVtYWlsIjoiaW5nZXN0aW9uLWJvdEBvcGVubWV0YWRhdGEub3JnIiwiaXNCb3QiOnRydWUsInRva2VuVHlwZSI6IkJPVCIsImlhdCI6MTcxNDM1ODQ3MSwiZXhwIjpudWxsfQ.Qj_U1X9vykqfw7fCdEPqQMdeR2__dGk9OJl8bMjAils4XRCJtoQ4YcttPavz9AQ4eHK4Uwb7Bep9PKKYsd7j7-DGJbzB5Yvpz-mumJ8oXoLgMfyT41OB6BSNR65_34Z2xBJOY-Sxi9ydP6n5XcqARigR63iagEv9AmuPWNuDyYt-LX5KesOc4cwUnCP_4YojE-uz3RtnbY3hlfcV5bdhhDYj1W3UrMqxy8PgfK54YpXTZt2NhcNkWd3Iae0Z9MYXtBZYJ6lBjRi3Z8LS3R2YEN-dfFdYzgZCxSFN5oVGEr3uuTxrgj3c3paXw3rSDutymSQ9S86s2HjYLVhi0EckEQ
            - name: AIRFLOW__LINEAGE__OPENMETADATA_API_ENDPOINT
              value: 'http://openmetadata.$(NAMESPACE).svc.cluster.local:8585/api'
            - name: AIRFLOW_CONN_S3
              value: 'aws://minioAdmin:minio1234@/?endpoint_url=http:%2F%2Fminio.$(NAMESPACE).svc.cluster.local:9000'
            - name: AIRFLOW_CONN_TRINO_CONNECTION
              value: 'trino://admin:@trino.$(NAMESPACE).svc.cluster.local:8080/'
            - name: AIRFLOW__WEBSERVER__WEB_SERVER_MASTER_TIMEOUT
              value: '300'
            - name: AIRFLOW__WEBSERVER__WORKER_REFRESH_BATCH_SIZE
              value: '0'
            - name: AIRFLOW__WEBSERVER__WORKER_REFRESH_INTERVAL
              value: '0'
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: dags-data
              mountPath: /opt/airflow/dags
            - name: dags-generated-data
              mountPath: /opt/airflow/dag_generated_configs
            - name: dags-log
              mountPath: /opt/airflow/logs
          terminationMessagePolicy: File
          image: quay.io/osclimate/airflow:2.7.3-omdingest-1.2.2
          args:
            - bash
            - '-c'
            - exec airflow scheduler
        - name: mc
          image: 'quay.io/osclimate/minioclient:1.7'
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: DEPLOYMENT_TYPE
              value: sidecar
            - name: S3_BUCKET_URL
              # valueFrom:
              #   secretKeyRef:
              #     name: dag-deployment
              #     key: s3-bucketurl
            - name: S3_BUCKET_URL
              value: http://minio:9000
            - name: S3_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: dag-deployment
                  key: s3-accesskey
            - name: S3_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: dag-deployment
                  key: s3-secret_key
          resources:
            limits:
              cpu: '2'
              memory: 4Gi
            requests:
              cpu: '1'
              memory: 2Gi
          volumeMounts:
            - name: mcconfig
              mountPath: /.mc
            - name: dags-data
              mountPath: /opt/airflow/dags
            - name: dags-log
              mountPath: /opt/airflow/logs
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      volumes:
        - name: dags-data
          emptyDir: {}
        - name: dags-generated-data
          emptyDir: {}
        - name: dags-log
          emptyDir: {}
        - name: config
          emptyDir: {}
        - name: mcconfig
          emptyDir: {}
        # - name: airflowweb-config
        #   configMap:
        #     name: airflow-sso-config
        #     defaultMode: 420
      dnsPolicy: ClusterFirst
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%